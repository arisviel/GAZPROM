FUNCTION_BLOCK FB_ST_PAZ_KGS_KOS_KORV
(*СБРОС ПЕРЕМЕННЫХ*)
IF CRXX_SERVER OR CRXX_PANEL OR CRXX_RESERV THEN
    ZAPUSK_SERVER:=FALSE;
    ZAPUSK_RESERV:=FALSE;
    ZAPUSK_PANEL:=FALSE;
    ZAPUSKPROM:=FALSE;
    CONFIRM_PANEL:=FALSE;
    CONFIRM_SERVER:=FALSE;
    CONFIRM_RESERV:=FALSE;
    ZAP_ON:=FALSE;
    NO_NOPE:=FALSE;
    OSTANOV:=FALSE;
    UDK_COMM:=FALSE;
    ABDI_COMM:=FALSE;
    KGS_CAOF:=FALSE;
    METANOL_CAOF:=FALSE;
    TON2.IN:=FALSE;
    SPI_CENX:=FALSE;
    ASK:=FALSE;
    CONF_SERVER:=FALSE;
    CONF_RESERV:=FALSE;
    CONF_PANEL:=FALSE;
    NO_KGS:=FALSE;
    XPFF1:=FALSE;
    XPFX1:=FALSE;
    AO_SERVER:=FALSE;
    AO_RESERV:=FALSE;
    AO_PANEL:=FALSE;
    AO_KGS:=FALSE;
    XPFX2:=FALSE;
    XPFF2:=FALSE;
    PAZ:=FALSE;
    MANUAL:=FALSE;
    END_IF;
(*инициализация запуска НО*)
IF ZAPUSK_SERVER OR ZAPUSK_PANEL OR ZAPUSK_RESERV THEN
    ZAPUSKPROM:=TRUE;
    END_IF;

IF STOP_PANEL OR STOP_RESERV OR STOP_SERVER THEN
    ZAPUSK_SERVER:=FALSE;
    ZAPUSK_PANEL:=FALSE;
    ZAPUSK_RESERV:=FALSE;
    ZAPUSKPROM:=FALSE;
    END_IF;

IF NOT ZAPUSKPROM THEN
    STOP_PANEL:=FALSE;
    STOP_SERVER:=FALSE;
    STOP_RESERV:=FALSE;
    END_IF;

TON1 (.IN, .PT);
TON1.PT:=T#30s;
TON1.IN:=ZAPUSKPROM;
IF TON1.Q THEN
    ZAP_ON:=TRUE;     
    END_IF;

(*ЗАПУСК ТАЙМЕРА ОБРАТНОГО ОТЧЕТА ВРЕМЕНИ ЗАПУСКА НО*)
TCYCLE:= ANY_TO_REAL(__SYSVA_TCYCYCTIME)/1000;
IF ZAPUSKPROM THEN
TIMER2:=TIMER2+TCYCLE;
ELSE
TIMER2:=0;
END_IF;

XTCX2:=30-TIMER2;

(*ЗАПУСК АЛГОРИТМА НО*)

IF CONFIRM_PANEL OR CONFIRM_SERVER OR CONFIRM_RESERV THEN
    ZAP_ON:=TRUE; 
    END_IF;

IF ZAP_ON AND ZAPUSK_SERVER THEN
    ZP_SERVER:=TRUE;
    ELSE
    ZP_SERVER:=FALSE;
    END_IF;

IF ZAP_ON AND ZAPUSK_PANEL THEN
    ZP_PANEL:=TRUE;
    ELSE
    ZP_PANEL:=FALSE;
    END_IF;

IF ZAP_ON AND ZAPUSK_RESERV THEN
    ZP_RESERV:=TRUE;
    ELSE
    ZP_RESERV:=FALSE;
    END_IF;  

(*ПРОВЕРКА УСЛОВИЙ ЗАПУСКА*) 

IF ZAP_ON AND P_TF > 1 THEN
    NO_NOPE:=TRUE;
    END_IF;

IF ZAP_ON AND (KGS_ILCX OR KGS_FXXX OR KGS_CRPX OR METANOL_ILCX OR METANOL_FXXX
OR METANOL_CRPX OR SPI_ILCX OR SPI_FXXX OR SPI_CRPX) THEN
    NO_NOPE:=TRUE;
    END_IF;

IF ZAP_ON AND (NOT RDY1 OR NOT RDY2) THEN
    NO_NOPE:=TRUE;
    END_IF;

IF ZAP_ON AND N_SKV = 3 AND NOT RDY3 THEN
    NO_NOPE:=TRUE;
    END_IF;

IF ZAP_ON AND N_SKV=4 AND (NOT RDY3 OR NOT RDY4) THEN
    NO_NOPE:=TRUE;
    END_IF;

IF ZAP_ON AND N_SKV=5 AND (NOT RDY3 OR NOT RDY4 OR NOT RDY5) THEN
    NO_NOPE:=TRUE;
    END_IF;

IF ZAP_ON AND N_SKV=6 AND (NOT RDY4 OR NOT RDY5 OR NOT RDY3 OR NOT RDY6) THEN
    NO_NOPE:=TRUE;
    END_IF;

IF ZAP_ON AND N_SKV=7 AND (NOT RDY3 OR NOT RDY4 OR NOT RDY5 OR NOT RDY6 OR NOT RDY7) THEN
    NO_NOPE:=TRUE;
    END_IF;

IF ZAP_ON AND NOT NO_NOPE THEN
    OSTANOV:=TRUE;
    END_IF;

(*ЗАПУСК ТАЙМЕРА ОБРАТНОГО ОТЧЕТА ВРЕМЕНИ НА ВЫПОЛНЕНИЕ НО*)
IF OSTANOV THEN
    TIMER3:=TIMER3+TCYCLE;
        IF TIMER3>STPX THEN
        XPFF1:=TRUE; (*АЛГОРИТМ НЕ ОТРАБОТАЛ*)
        END_IF;
ELSE
TIMER3:=0;
END_IF;
XTCX3:=STPX-TIMER3;

(*ОТКЛЮЧАЕМ АЛГОРИТМЫ УПРАВЛЕНИЯ УДК И АБДИ*)
IF OSTANOV THEN 
    UDK_COMM:=TRUE;
    ABDI_COMM:=TRUE;
    END_IF;

(*ТРОГАЕМ КРАНЫ НЕЖНО*)
IF OSTANOV THEN
    KGS_CAOF:=TRUE;
    METANOL_CAOF:=TRUE;
    END_IF;

TON2 (.IN, .PT);
TON2.PT:=T#5s;
    IF OSTANOV AND KGS_CAOF THEN
        TON2.IN:=TRUE;
        END_IF;

    IF TON2.Q AND NOT KGS_XONX THEN
        SPI_CENX:=TRUE;
        ASK:=TRUE;
        END_IF;

IF ASK AND CONF_SERVER OR CONF_PANEL OR CONF_RESERV THEN
    NO_KGS:=TRUE;
    END_IF;

(*ПРОВЕРКА ВЫПОЛНЕНИЯ ОСТАНОВА*)

IF OSTANOV AND KGS_XOFX AND METANOL_XOFX AND (SPI_XCPP=0) THEN
    PROM_XPFX1:=TRUE;
    ELSE
    PROM_XPFX1:=FALSE;
    END_IF;

IF N_SKV<3 AND PROM_XPFX1 AND XPFX11 AND XPFX21 THEN
    XPFX1:=TRUE;
    END_IF;

IF N_SKV=3 AND PROM_XPFX1 AND XPFX11 AND XPFX21 AND XPFX31 THEN
    XPFX1:=TRUE;
    END_IF;

IF N_SKV=4 AND PROM_XPFX1 AND XPFX11 AND XPFX21 AND XPFX31 AND XPFX41 THEN
    XPFX1:=TRUE;
    END_IF;

IF N_SKV=5 AND PROM_XPFX1 AND XPFX11 AND XPFX21 AND XPFX31 AND XPFX41 AND XPFX51 THEN
    XPFX1:=TRUE;
    END_IF;

IF N_SKV=6 AND PROM_XPFX1 AND XPFX11 AND XPFX21 AND XPFX31 AND XPFX41 AND XPFX51 AND XPFX61 THEN
    XPFX1:=TRUE;
    END_IF;

IF N_SKV=7 AND PROM_XPFX1 AND XPFX11 AND XPFX21 AND XPFX31 AND XPFX41 AND XPFX51 AND XPFX61 AND XPFX71 THEN
    XPFX1:=TRUE;
    END_IF;

(*АВАРИЯ C КНОПКИ*)

(*Подтверждение запуска*)
IF MANUAL_SERVER OR MANUAL_PANEL OR MANUAL_RESERV THEN
    MANUAL:=TRUE;
    MANUAL_SERVER:=FALSE;
    MANUAL_PANEL:=FALSE;
    MANUAL_RESERV:=FALSE;
    END_IF;

IF PUSK_BLOCK_SERVER OR PUSK_BLOCK_RESERV OR PUSK_BLOCK_PANEL THEN
    BLOCK_PAZ:=TRUE;
    PUSK_BLOCK_RESERV:=FALSE;
    PUSK_BLOCK_PANEL:=FALSE;
    PUSK_BLOCK_SERVER:=FALSE;
    END_IF;

IF PUSK_UNBLOCK_RESERV OR PUSK_UNBLOCK_SERVER OR PUSK_UNBLOCK_PANEL THEN
    BLOCK_PAZ:=FALSE;
    PUSK_UNBLOCK_RESERV:=FALSE;
    PUSK_UNBLOCK_PANEL:=FALSE;
    PUSK_UNBLOCK_SERVER:=FALSE;
    END_IF;

(*ПРОВЕРКА АВАРИЙНЫХ СООБЩЕНИЙ*)

IF P1_XLAX OR P2_XLAX OR P_VH_XLAX AND NOT BLOCK_PAZ THEN
    ALARM:=TRUE;
    PAZ:=TRUE;
    ELSE
    ALARM:=FALSE;
    END_IF;

IF AO_SERVER OR AO_PANEL OR AO_RESERV OR AO_GP1 OR AO_ASU AND NOT BLOCK_PAZ THEN
    PAZ:=TRUE;
    END_IF;

(*ЗАПУСК ТАЙМЕРА ОБРАТНОГО ОТЧЕТА ВРЕМЕНИ НА ВЫПОЛНЕНИЕ ПАЗ*)
IF PAZ AND NOT XPFX2 THEN
    TIMER1:=TIMER1+TCYCLE;
        IF TIMER1>STPX THEN
        XPFF2:=TRUE; (*ПАЗ НЕ ОТРАБОТАЛ*)
        END_IF;
ELSE
TIMER1:=0;
END_IF;
XTCX1:=STPX-TIMER1;

(*ОТКЛЮЧАЕМ АЛГОРИТМЫ УПРАВЛЕНИЯ УДК И АБДИ*)
IF PAZ THEN 
    UDK_PAZ:=TRUE;
    ABDI_PAZ:=TRUE;
    END_IF;

(*ТРОГАЕМ КРАНЫ RUDE*)
IF PAZ THEN
    KGS_CEOF:=TRUE;
    METANOL_CEOF:=TRUE;
    SPI_CEXX:=TRUE;
    AO_KGS:=TRUE;
    END_IF;

(*ПРОВЕРКА ОТРАБОТКИ*)

IF (PAZ AND (KGS_XOFX OR KGS_CRPX) AND (METANOL_XOFX OR METANOL_CRPX) AND ((SPI_XCPP=0) OR SPI_CRPX)) THEN
    PROM_XPFX2:=TRUE;
    ELSE
    PROM_XPFX2:=FALSE;
    END_IF;

IF N_SKV<3 AND PROM_XPFX2 AND XPFX12 AND XPFX22 THEN
    XPFX2:=TRUE;
    END_IF;

IF N_SKV=3 AND PROM_XPFX2 AND XPFX12 AND XPFX22 AND XPFX32 THEN
    XPFX2:=TRUE;
    END_IF;

IF N_SKV=4 AND PROM_XPFX2 AND XPFX12 AND XPFX22 AND XPFX32 AND XPFX42 THEN
    XPFX2:=TRUE;
    END_IF;

IF N_SKV=5 AND PROM_XPFX2 AND XPFX12 AND XPFX22 AND XPFX32 AND XPFX42 AND XPFX52 THEN
    XPFX2:=TRUE;
    END_IF;

IF N_SKV=6 AND PROM_XPFX2 AND XPFX12 AND XPFX22 AND XPFX32 AND XPFX42 AND XPFX52 AND XPFX62 THEN
    XPFX2:=TRUE;
    END_IF;

IF N_SKV=7 AND PROM_XPFX2 AND XPFX12 AND XPFX22 AND XPFX32 AND XPFX42 AND XPFX52 AND XPFX62 AND XPFX72 THEN
    XPFX2:=TRUE;
    END_IF;

IF XPFX2 THEN
    PAZ:=FALSE;
    END_IF;


IF CRXX_SERVER OR CRXX_RESERV OR CRXX_PANEL THEN
    CRXX_SERVER:=FALSE;
    CRXX_PANEL:=FALSE;
    CRXX_RESERV:=FALSE;
    END_IF;

END_FUNCTION_BLOCK